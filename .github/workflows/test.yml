name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-deps-linux:
    name: Build yagit dependencies on Linux
    runs-on: ubuntu-latest

    steps:
      - name: Download script
        uses: actions/checkout@v4
        with:
          sparse-checkout: setup.sh
          sparse-checkout-cone-mode: false

      - name: Cache yagit dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            build/deps/GDCM/build/installed
            build/deps/xsimd/build/installed
            build/deps/googletest/build/installed
          key: deps-local-${{ runner.os }}-${{ hashFiles('setup.sh') }}
          lookup-only: true

      - name: Set dependencies installation to local
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          set_config() { sed -i "s|^\(\s*$1\)=.*|\1=$2|" setup.sh; }
          set_config  INSTALL_DEPENDENCIES  LOCAL

      - name: Build dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: ./setup.sh

  yagit-linux:
    name: Build yagit on Linux
    runs-on: ubuntu-latest
    needs: build-deps-linux

    strategy:
      matrix:
        gamma-version: ["SEQUENTIAL", "THREADS", "SIMD", "THREADS_SIMD"]
        build-type: ["Release"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache yagit dependencies
        uses: actions/cache@v4
        with:
          path: |
            build/deps/GDCM/build/installed
            build/deps/xsimd/build/installed
            build/deps/googletest/build/installed
          key: deps-local-${{ runner.os }}-${{ hashFiles('setup.sh') }}
          fail-on-cache-miss: true

      - name: Configure setup.sh
        run: |
          set_config() { sed -i "s|^\(\s*$1\)=.*|\1=$2|" setup.sh; }

          set_config  BUILD_TYPE                 ${{ matrix.build-type }}
          set_config  INSTALL_DEPENDENCIES       LOCAL
          set_config  GAMMA_VERSION              ${{ matrix.gamma-version }}
          set_config  SIMD_EXTENSION             ${{ endsWith(matrix.gamma-version, 'SIMD') && 'AVX2' || 'DEFAULT' }}
          set_config  BUILD_EXAMPLES             ON
          set_config  BUILD_TESTING              ON
          set_config  BUILD_PERFORMANCE_TESTING  ON
          set_config  RUN_EXAMPLES               OFF
          set_config  RUN_TESTING                OFF
          set_config  RUN_PERFORMANCE_TESTING    OFF
          set_config  BUILD_DOCUMENTATION        OFF
          set_config  INSTALL                    ON
          set_config  INSTALL_DIR                ./yagit_install

      - name: Build and install yagit
        run: ./setup.sh

      - name: Run unit tests
        run: ctest -C ${{ matrix.build-type }} --test-dir build --output-on-failure --no-tests=error

      - name: Run example
        run: ./build/examples/gammaSimple

  download-deps-windows:
    name: Download yagit dependencies on Windows
    runs-on: windows-2022

    defaults:
      run:
        shell: cmd

    steps:
      - name: Download conanfile
        uses: actions/checkout@v4
        with:
          sparse-checkout: conanfile.txt
          sparse-checkout-cone-mode: false

      - name: Cache yagit dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            build/deps_conan
            ~/.conan2/p/**/p
          key: deps-conan-${{ runner.os }}-${{ hashFiles('conanfile.txt') }}
          lookup-only: true

      - name: Set up Python
        if: steps.cache-deps.outputs.cache-hit != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Conan
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          python -m pip install conan==2.*
          conan profile detect
          conan --version

      - name: Download dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          mkdir build\deps_conan
          cd build\deps_conan
          conan install ../.. --output-folder . --build missing

  yagit-windows:
    name: Build yagit on Windows
    runs-on: windows-2022
    needs: download-deps-windows

    defaults:
      run:
        shell: cmd

    strategy:
      matrix:
        gamma-version: ["SEQUENTIAL", "THREADS", "SIMD"]
        build-type: ["Release"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache yagit dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            build/deps_conan
            ~/.conan2/p/**/p
          key: deps-conan-${{ runner.os }}-${{ hashFiles('conanfile.txt') }}
          fail-on-cache-miss: true

      - name: Configure setup.bat
        run: |
          echo sed -i "s|^\(\s*set \s*%%1\)=.*|\1=%%~2|" setup.bat > set_config.bat

          call set_config  BUILD_TYPE                 ${{ matrix.build-type }}
          call set_config  INSTALL_DEPENDENCIES       CONAN
          call set_config  GAMMA_VERSION              ${{ matrix.gamma-version }}
          call set_config  SIMD_EXTENSION             ${{ endsWith(matrix.gamma-version, 'SIMD') && 'AVX2' || 'DEFAULT' }}
          call set_config  BUILD_EXAMPLES             ON
          call set_config  BUILD_TESTING              ON
          call set_config  BUILD_PERFORMANCE_TESTING  ON
          call set_config  RUN_EXAMPLES               OFF
          call set_config  RUN_TESTING                OFF
          call set_config  RUN_PERFORMANCE_TESTING    OFF
          call set_config  BUILD_DOCUMENTATION        OFF
          call set_config  INSTALL                    ON
          call set_config  INSTALL_DIR                ./yagit_install

      - name: Build and install yagit
        run: call setup.bat

      - name: Run unit tests
        run: ctest -C ${{ matrix.build-type }} --test-dir build --output-on-failure --no-tests=error

      - name: Run example
        run: build\examples\${{ matrix.build-type }}\gammaSimple.exe
