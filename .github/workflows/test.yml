name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  yagit-linux:
    name: Build yagit on Linux
    runs-on: ubuntu-latest

    strategy:
      matrix:
        gamma-version:
          - "SEQUENTIAL"
          - "THREADS"
          - "SIMD"
          - "THREADS_SIMD"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check tools versions
        run: |
          gcc --version
          g++ --version
          cmake --version

      - name: Configure setup.sh
        run: |
          which sed
          set_config() { sed -i "s|^\(\s*$1\)=.*|\1=$2|" setup.sh; }

          set_config  BUILD_TYPE                 ${{ env.BUILD_TYPE }}
          set_config  INSTALL_DEPENDENCIES       LOCAL
          set_config  GAMMA_VERSION              ${{ matrix.gamma-version }}
          set_config  SIMD_EXTENSION             ${{ endsWith(matrix.gamma-version, 'SIMD') && 'AVX2' || 'DEFAULT' }}
          set_config  BUILD_EXAMPLES             ON
          set_config  BUILD_TESTING              ON
          set_config  BUILD_PERFORMANCE_TESTING  ON
          set_config  RUN_EXAMPLES               OFF
          set_config  RUN_TESTING                OFF
          set_config  RUN_PERFORMANCE_TESTING    OFF
          set_config  BUILD_DOCUMENTATION        OFF
          set_config  INSTALL                    ON
          set_config  INSTALL_DIR                ./yagit_install

      - name: Build and install yagit
        run: ./setup.sh

      - name: Run unit tests
        run: ctest -C ${{ env.BUILD_TYPE }} --test-dir build --output-on-failure

      - name: Run example
        run: ./build/examples/gammaSimple

  yagit-windows:
    name: Build yagit on Windows
    runs-on: windows-2022

    defaults:
      run:
        shell: cmd

    strategy:
      matrix:
        gamma-version:
          - "SEQUENTIAL"
          - "THREADS"
          - "SIMD"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Conan
        run: python -m pip install conan

      - name: Check tools versions
        run: |
          cl
          cmake --version
          conan --version

      - name: Configure setup.bat
        run: |
          where sed
          echo sed -i "s|^\(\s*set \s*%1\)=.*|\1=%~2|" setup.bat > set_config.bat

          set_config  BUILD_TYPE                 ${{ env.BUILD_TYPE }}
          set_config  INSTALL_DEPENDENCIES       CONAN
          set_config  GAMMA_VERSION              ${{ matrix.gamma-version }}
          set_config  SIMD_EXTENSION             ${{ endsWith(matrix.gamma-version, 'SIMD') && 'AVX2' || 'DEFAULT' }}
          set_config  BUILD_EXAMPLES             ON
          set_config  BUILD_TESTING              ON
          set_config  BUILD_PERFORMANCE_TESTING  ON
          set_config  RUN_EXAMPLES               OFF
          set_config  RUN_TESTING                OFF
          set_config  RUN_PERFORMANCE_TESTING    OFF
          set_config  BUILD_DOCUMENTATION        OFF
          set_config  INSTALL                    ON
          set_config  INSTALL_DIR                ./yagit_install

          type set_config.bat
          type setup.bat

      - name: Build and install yagit
        run: setup.bat

      - name: Run unit tests
        run: ctest -C ${{ env.BUILD_TYPE }} --test-dir build --output-on-failure

      - name: Run example
        run: build\examples\${{ env.BUILD_TYPE }}\gammaSimple.exe
